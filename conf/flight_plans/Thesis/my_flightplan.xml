<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">

<flight_plan alt="1.0" ground_alt="0" lat0="51.9906224" lon0="4.3767678" max_dist_from_home="8" name="My Flightplan" security_height="0.4">
  <header>
    #include "subsystems/datalink/datalink.h"
    #include "subsystems/electrical.h"
    #include "subsystems/radio_control.h"
    #include "subsystems/ahrs.h"
</header>
  <waypoints>
    <!-- <waypoint lat="51.990631" lon="4.376796" name="HOME"/> -->
    <waypoint name="HOME" x="0.0" y="0.0"/>
    <waypoint name="CLIMB" x="1.9" y="1.0"/>
    <waypoint name="STDBY" x="1.9" y="1.0"/>
    <waypoint name="TD" x="0.8" y="-1.7"/>
    <waypoint name="GOAL1" x="0.0" y="-1.0"/>
	<waypoint name="GOAL2" x="0.0" y="2.0"/>
    <waypoint name="TRAJECTORY" x="1.9" y="1.0"/>
	<waypoint name="A" x="0.0" y="-1.0"/>
	<waypoint name="B" x="0.0" y="2.0"/>
	<waypoint name="C" x="3.5" y="-1.0"/>
	<waypoint name="D" x="3.5" y="2.0"/>
    <waypoint lat="51.9905836" lon="4.3767729" name="_CZ1"/>
    <waypoint lat="51.9906365" lon="4.3767138" name="_CZ2"/>
    <waypoint lat="51.990680" lon="4.376805" name="_CZ3"/>
    <waypoint lat="51.9906226" lon="4.3768699" name="_CZ4"/>
    <waypoint lat="51.990594" lon="4.376776" name="_OZ1"/>
    <waypoint lat="51.990636" lon="4.376733" name="_OZ2"/>
    <waypoint lat="51.990671" lon="4.376806" name="_OZ3"/>
    <waypoint lat="51.990624" lon="4.376852" name="_OZ4"/>
  </waypoints>
  <sectors>
    <sector color="red" name="CyberZoo">
      <corner name="_CZ1"/>
      <corner name="_CZ2"/>
      <corner name="_CZ3"/>
      <corner name="_CZ4"/>
    </sector>
    <sector color="#FF9922" name="ObstacleZone">
      <corner name="_OZ1"/>
      <corner name="_OZ2"/>
      <corner name="_OZ3"/>
      <corner name="_OZ4"/>
    </sector>
  </sectors>
  <exceptions>
    <!-- RC lost -->
    <!--exception cond="((radio_control.status == RC_REALLY_LOST) &&
      !(IndexOfBlock('Holding point') > nav_block) &&
      !(nav_block >= IndexOfBlock('Land here')) &&
      (autopilot_in_flight() == true) )" deroute="Standby"/-->
    <!-- Datalink lost (constant RPM descent) -->  
    <exception cond="((datalink_time > 2) &&
      !(IndexOfBlock('Holding point') > nav_block) &&
      !(nav_block >= IndexOfBlock('Land here')) &&
      (autopilot_in_flight() == true) )" deroute="Land here"/>
    <!-- Geofencing XY -->
    <exception cond="(!InsideCyberZoo(GetPosX(), GetPosY()) &&
      !(IndexOfBlock('Holding point') > nav_block) &&
      !(nav_block >= IndexOfBlock('Land here')) &&
      (autopilot_in_flight() == true) )" deroute="Land here"/>
    <!-- Geofencing Z 2.5 -->
    <exception cond="((GetPosAlt() > 3.5) &&
      !(IndexOfBlock('Holding point') > nav_block) &&
      !(nav_block >= IndexOfBlock('Land here')) &&
      (autopilot_in_flight() == true) )" deroute="Land here"/>
    <!-- Geofencing Z 4.5 (constant RPM descent)-->
    <exception cond="((GetPosAlt() > 4.5) &&
      !(IndexOfBlock('Holding point') > nav_block) &&
      (autopilot_in_flight() == true) )" deroute="Landed"/>
    <!-- Bat low -->  
    <exception cond="(electrical.bat_low &&
      !(IndexOfBlock('Holding point') > nav_block) &&
      !(nav_block >= IndexOfBlock('Land here')) &&
      (autopilot_in_flight() == true) )" deroute="Land here"/>
    <!-- Bat critical (constant RPM no stabilization)-->
    <exception cond="(electrical.bat_critical &&
      !(IndexOfBlock('Holding point') > nav_block) &&
      !(nav_block >= IndexOfBlock('Land here')) &&
      (autopilot_in_flight() == true) )" deroute="Land here"/>
  </exceptions>
  <blocks>
    <block name="Wait GPS">
      <call_once fun="NavKillThrottle()"/>
      <while cond="!GpsFixValid()"/>
    </block>
    <block name="Geo init">
      <while cond="LessThan(NavBlockTime(), 2)"/>
      <call_once fun="NavSetAltitudeReferenceHere()"/>
    </block>
    <block name="Holding point">
      <call_once fun="NavKillThrottle()"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
    <block key="r" name="Start Engine">
      <call_once fun="NavResurrect()"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
      <call_once fun="NavResurrect()"/>
    </block>
    <block key="t" name="Takeoff" strip_button="Takeoff" strip_icon="takeoff.png">
      <exception cond="GetPosAlt() > 1.0" deroute="Standby"/>
      <call_once fun="NavSetWaypointHere(WP_CLIMB)"/>
      <stay climb="nav_climb_vspeed" vmode="climb" wp="CLIMB"/>
    </block>
    <block key="s" name="Standby" strip_button="Standby" strip_icon="home.png">
      <call_once fun="NavSetWaypointHere(WP_STDBY)"/>
      <stay wp="STDBY"/>
    </block>
    <block key="g" name="START" strip_button="Go" strip_icon="lookfore.png">
      <call_once fun="NavSetWaypointHere(WP_GOAL1)"/>
    </block>
<!-- These are the blocks that I added  -->
	<block name="init Tests">
		<go wp="A"/>
		<stay wp="A"/>
	</block>
	<block name="flySquare">
		<while cond="LessThan(60,block_time)">
			<go from="A" wp="B" hmode="route"/>
			<go from="B" wp="C" hmode="route"/>
			<go from="C" wp="D" hmode="route"/>
			<go from="D" wp="A" hmode="route"/>
		</while>
		<deroute block="Standby"/> 
	</block>
<!--
	<block name="squareWave">
		<for var="i" from="0" to="3">
			<go wp="GOAL2" />
			<call_once fun="my_moveWaypointLeft(WP_GOAL2,0.25)"/>
			<go wp="GOAL2"/> 
			<call_once fun="my_moveWaypointLeft(WP_GOAL1,0.25)"/>
			<go wp="GOAL1"/>
			<call_once fun="my_moveWaypointLeft(WP_GOAL1,0.25)"/>
			<go wp="GOAL1"/>
			<call_once fun="my_moveWaypointLeft(WP_GOAL2,0.25)"/>
		</for>
		<deroute block="Standby"/> 
	</block>	-->

	<block name="testUWB">
		<go wp="A"/>

	</block>
<!-- End of the blocks that I added  -->
    <block key="l" name="Land here" strip_button="Land Here" strip_icon="land-right.png">
      <call_once fun="NavSetWaypointHere(WP_TD)"/>
      <go wp="TD"/>
      <deroute block="Flare"/>
    </block>
    <block name="Land">
      <go wp="TD"/>
      <deroute block="Flare"/>
    </block>
    <block name="Flare">
      <exception cond="NavDetectGround()" deroute="Holding point"/>
      <exception cond="!nav_is_in_flight()" deroute="Landed"/>
      <exception cond="0.10 > GetPosAlt()" deroute="Landed"/>
      <call_once fun="NavStartDetectGround()"/>
      <stay climb="nav_descend_vspeed" vmode="climb" wp="TD"/>
    </block>
    <block name="Landed">
      <call_once fun="NavKillThrottle()"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
  </blocks>
</flight_plan>


